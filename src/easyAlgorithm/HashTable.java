package easyAlgorithm;

public class HashTable {
	/*
	 * 1. 雜湊表在Java中是用HashMap實作
	 * 2. 製作雜湊表需要有 "雜湊函式" + 陣列
	 * 3. 存放的 key - value處理如下
	 * 		1- 把 key 經過雜湊函式運算，得出一個數，%陣列長度取餘數 r ，就放進陣列的 index = r的位置
	 * 		2- 每個key 不管經過雜湊函式運算幾次，都會得到一樣的值 (才能夠每次都正確回報這個東西在陣列的 index)
	 * 		3- 若key運算後不小心相同(這個現象叫collision 碰撞)
	 * 			就會在該index中存放linkedList，所以若運算後重複的很多，linkedList就會很長，會影響搜尋速度
	 * 		4- 因為東西放陣列中，所以在 HashMap 中找東西很快，
	 * 			把key再丟一次雜湊函式，得到的值就是index。 搜尋速度平均情況是 O(1) (等同在陣列中找東西)。
	 * 		5- 負載係數 (load factor) (已裝的元素數量/陣列的長度) 係數若越高，代表雜湊函式運算的結果越容易重複。係數等於0.7通常建議換一個雜湊函式。
	 * 
	 * 4.陣列為什麼搜尋速度很快
	 * 		因為是用計算間隔的方式，
	 * 		例如要找index=5的東西，假設一格陣列寬4byte，就會把index 0的位址 + 4 * 4 byte 得到inddex=5的位置
	 * 		O(1)的執行速度
	 * 
	 */
}
